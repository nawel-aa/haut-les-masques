/*
============================================================
LAYOUT: FLEX GRID
============================================================
*/
.row {
  display: flex;
  flex-wrap: wrap;
  
  &--justify-space-bet {
    @extend .row;
    justify-content: space-between;
  }

  &--justify-end {
    @extend .row;
    justify-content: end;
  }

  &--align-center {
    @extend .row;
    align-items: center;
  }

  &--align-content-space-bet {
    @extend .row;
    align-content: space-between;
  }
}

// By default, col is applied to all screen size.
.col {
  flex: 1 1 auto;
  display: initial;
  
  &--auto {
    flex: 0 0 auto;
    display: initial;
  }
  
  &--none {
    display: none;
  }
  
  // Generates the column classes with the format col--colsize
  // For example col--50 for a 50% column.
  @each $key, $value in $column-size {
    &--#{$key} {
      flex-basis: $value;
      box-sizing: border-box;
      display: initial;
    }
  }
}

// Media queries
// Generates the column classes with the format col--screensize--colsize
// For example col--l--50 for a 50% column, only on large screens.

@include responsive--m {
  .col--m {
    flex: 1 1 auto;
    display: initial;
    
    &--auto {
      flex: 0 0 auto;
      display: initial;
    }
    
    &--none {
      display: none;
    }
    
    // Generates the column classes with the format col--colsize
    // For example col--50 for a 50% column.
    @each $key, $value in $column-size {
      &--#{$key} {
        flex-basis: $value;
        box-sizing: border-box;
        display: initial;
      }
    }
  }
}

@include responsive--l {
  .col--l {
    flex: 1 1 auto;
    display: initial;
    
    &--auto {
      flex: 0 0 auto;
      display: initial;
    }
    
    &--none {
      display: none;
    }

    @each $key, $value in $column-size {
      &--#{$key} {
        flex-basis: $value;
        box-sizing: border-box;
        display: initial;
      }
    }
  }
}